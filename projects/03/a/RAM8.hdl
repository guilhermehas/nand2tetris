/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=addRess, 
        a=loada, b=loadb, c=load2, d=load3,
        e=load4, f=load5, g=load6, h=load7);

    Register(in=in, load=loada, out=outa);
    Register(in=in, load=loadb, out=outb);
    Register(in=in, load=load2, out=outc);
    Register(in=in, load=load3, out=outd);
    Register(in=in, load=load4, out=oute);
    Register(in=in, load=load5, out=outf);
    Register(in=in, load=load6, out=outg);
    Register(in=in, load=load7, out=outh);

    Mux8Way16(a=outa, b=outb, c=outc, d=outd, e=oute, f=outf, g=outg, h=outh,
        sel=address, out=out);
}
